ARM GAS  /tmp/ccHmMOv1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.fputc,"ax",%progbits
  18              		.align	1
  19              		.global	fputc
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	fputc:
  25              	.LVL0:
  26              	.LFB119:
  27              		.file 1 "Core/Source/usart.c"
   1:Core/Source/usart.c **** #include "usart.h"
   2:Core/Source/usart.c **** #include "gpio.h"
   3:Core/Source/usart.c **** 
   4:Core/Source/usart.c **** //---------------------------------------------------------------------//
   5:Core/Source/usart.c **** #define   DBG_UART      USART0
   6:Core/Source/usart.c **** 
   7:Core/Source/usart.c **** //---------------------------------------------------------------------//
   8:Core/Source/usart.c **** char DBG_buf[30];
   9:Core/Source/usart.c **** 
  10:Core/Source/usart.c **** //-----------------------------for MicroLIB-----------------------------//
  11:Core/Source/usart.c **** int fputc(int ch, FILE *f)
  12:Core/Source/usart.c **** {
  28              		.loc 1 12 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 12 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
  13:Core/Source/usart.c ****   /* Place your implementation of fputc here */
  14:Core/Source/usart.c ****   /* e.g. write a character to the USART3 and Loop until the end of transmission */
  15:Core/Source/usart.c **** 	usart_data_transmit(USART0, (uint8_t)ch);
  39              		.loc 1 15 2 is_stmt 1 view .LVU2
  40 0004 C1B2     		uxtb	r1, r0
  41              	.LVL1:
  42              		.loc 1 15 2 is_stmt 0 view .LVU3
  43 0006 0548     		ldr	r0, .L4
ARM GAS  /tmp/ccHmMOv1.s 			page 2


  44              	.LVL2:
  45              		.loc 1 15 2 view .LVU4
  46 0008 FFF7FEFF 		bl	usart_data_transmit
  47              	.LVL3:
  16:Core/Source/usart.c **** 	while(RESET == usart_flag_get(USART0, USART_FLAG_TBE));
  48              		.loc 1 16 2 is_stmt 1 view .LVU5
  49              	.L2:
  50              		.loc 1 16 56 discriminator 1 view .LVU6
  51              		.loc 1 16 7 discriminator 1 view .LVU7
  52              		.loc 1 16 17 is_stmt 0 discriminator 1 view .LVU8
  53 000c 0721     		movs	r1, #7
  54 000e 0348     		ldr	r0, .L4
  55 0010 FFF7FEFF 		bl	usart_flag_get
  56              	.LVL4:
  57              		.loc 1 16 7 discriminator 1 view .LVU9
  58 0014 0028     		cmp	r0, #0
  59 0016 F9D0     		beq	.L2
  17:Core/Source/usart.c **** 	return ch;
  60              		.loc 1 17 2 is_stmt 1 view .LVU10
  18:Core/Source/usart.c **** }
  61              		.loc 1 18 1 is_stmt 0 view .LVU11
  62 0018 2046     		mov	r0, r4
  63 001a 10BD     		pop	{r4, pc}
  64              	.LVL5:
  65              	.L5:
  66              		.loc 1 18 1 view .LVU12
  67              		.align	2
  68              	.L4:
  69 001c 00380140 		.word	1073821696
  70              		.cfi_endproc
  71              	.LFE119:
  73              		.section	.text._write,"ax",%progbits
  74              		.align	1
  75              		.global	_write
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	_write:
  81              	.LVL6:
  82              	.LFB120:
  19:Core/Source/usart.c **** 
  20:Core/Source/usart.c **** //-------------------------------for GNU-------------------------------//
  21:Core/Source/usart.c **** int _write (int fd, char *pBuffer, int size)
  22:Core/Source/usart.c **** { 
  83              		.loc 1 22 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		.loc 1 22 1 is_stmt 0 view .LVU14
  88 0000 70B5     		push	{r4, r5, r6, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 16
  91              		.cfi_offset 4, -16
  92              		.cfi_offset 5, -12
  93              		.cfi_offset 6, -8
  94              		.cfi_offset 14, -4
  95 0002 0E46     		mov	r6, r1
ARM GAS  /tmp/ccHmMOv1.s 			page 3


  96 0004 1546     		mov	r5, r2
  23:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
  97              		.loc 1 23 2 is_stmt 1 view .LVU15
  98              	.LBB2:
  99              		.loc 1 23 7 view .LVU16
 100              	.LVL7:
 101              		.loc 1 23 11 is_stmt 0 view .LVU17
 102 0006 0024     		movs	r4, #0
 103              		.loc 1 23 2 view .LVU18
 104 0008 0AE0     		b	.L7
 105              	.LVL8:
 106              	.L9:
  24:Core/Source/usart.c **** 	{
  25:Core/Source/usart.c **** 		usart_data_transmit(USART0, (uint8_t)pBuffer[i]);
 107              		.loc 1 25 3 is_stmt 1 view .LVU19
 108 000a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 109 000c 0648     		ldr	r0, .L11
 110 000e FFF7FEFF 		bl	usart_data_transmit
 111              	.LVL9:
  26:Core/Source/usart.c **** 	  while(RESET == usart_flag_get(USART0, USART_FLAG_TBE));
 112              		.loc 1 26 4 view .LVU20
 113              	.L8:
 114              		.loc 1 26 58 discriminator 1 view .LVU21
 115              		.loc 1 26 9 discriminator 1 view .LVU22
 116              		.loc 1 26 19 is_stmt 0 discriminator 1 view .LVU23
 117 0012 0721     		movs	r1, #7
 118 0014 0448     		ldr	r0, .L11
 119 0016 FFF7FEFF 		bl	usart_flag_get
 120              	.LVL10:
 121              		.loc 1 26 9 discriminator 1 view .LVU24
 122 001a 0028     		cmp	r0, #0
 123 001c F9D0     		beq	.L8
  23:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 124              		.loc 1 23 28 is_stmt 1 discriminator 2 view .LVU25
  23:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 125              		.loc 1 23 29 is_stmt 0 discriminator 2 view .LVU26
 126 001e 0134     		adds	r4, r4, #1
 127              	.LVL11:
 128              	.L7:
  23:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 129              		.loc 1 23 18 is_stmt 1 discriminator 1 view .LVU27
  23:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 130              		.loc 1 23 2 is_stmt 0 discriminator 1 view .LVU28
 131 0020 AC42     		cmp	r4, r5
 132 0022 F2DB     		blt	.L9
 133              	.LBE2:
  27:Core/Source/usart.c **** 	}
  28:Core/Source/usart.c **** 	return size;
 134              		.loc 1 28 2 is_stmt 1 view .LVU29
  29:Core/Source/usart.c **** }
 135              		.loc 1 29 1 is_stmt 0 view .LVU30
 136 0024 2846     		mov	r0, r5
 137 0026 70BD     		pop	{r4, r5, r6, pc}
 138              	.LVL12:
 139              	.L12:
 140              		.loc 1 29 1 view .LVU31
 141              		.align	2
ARM GAS  /tmp/ccHmMOv1.s 			page 4


 142              	.L11:
 143 0028 00380140 		.word	1073821696
 144              		.cfi_endproc
 145              	.LFE120:
 147              		.section	.text.usart0_config,"ax",%progbits
 148              		.align	1
 149              		.global	usart0_config
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	usart0_config:
 155              	.LFB121:
  30:Core/Source/usart.c **** 
  31:Core/Source/usart.c **** //---------------------------------------------------------------------//
  32:Core/Source/usart.c **** void usart0_config(void)
  33:Core/Source/usart.c **** {
 156              		.loc 1 33 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 10B5     		push	{r4, lr}
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
  34:Core/Source/usart.c ****     usart0_gpio_init ();
 165              		.loc 1 34 5 view .LVU33
 166 0002 FFF7FEFF 		bl	usart0_gpio_init
 167              	.LVL13:
  35:Core/Source/usart.c **** 
  36:Core/Source/usart.c ****     rcu_periph_clock_enable(RCU_USART0);     // enable USART clock 
 168              		.loc 1 36 5 view .LVU34
 169 0006 40F20E60 		movw	r0, #1550
 170 000a FFF7FEFF 		bl	rcu_periph_clock_enable
 171              	.LVL14:
  37:Core/Source/usart.c **** 
  38:Core/Source/usart.c ****     /* USART configure */
  39:Core/Source/usart.c ****     usart_deinit(USART0);
 172              		.loc 1 39 5 view .LVU35
 173 000e 084C     		ldr	r4, .L15
 174 0010 2046     		mov	r0, r4
 175 0012 FFF7FEFF 		bl	usart_deinit
 176              	.LVL15:
  40:Core/Source/usart.c ****     usart_baudrate_set(USART0, 115200U);
 177              		.loc 1 40 5 view .LVU36
 178 0016 4FF4E131 		mov	r1, #115200
 179 001a 2046     		mov	r0, r4
 180 001c FFF7FEFF 		bl	usart_baudrate_set
 181              	.LVL16:
  41:Core/Source/usart.c ****     usart_transmit_config(USART0, USART_TRANSMIT_ENABLE);
 182              		.loc 1 41 5 view .LVU37
 183 0020 0821     		movs	r1, #8
 184 0022 2046     		mov	r0, r4
 185 0024 FFF7FEFF 		bl	usart_transmit_config
 186              	.LVL17:
  42:Core/Source/usart.c ****     usart_enable(USART0);
 187              		.loc 1 42 5 view .LVU38
ARM GAS  /tmp/ccHmMOv1.s 			page 5


 188 0028 2046     		mov	r0, r4
 189 002a FFF7FEFF 		bl	usart_enable
 190              	.LVL18:
  43:Core/Source/usart.c **** }
 191              		.loc 1 43 1 is_stmt 0 view .LVU39
 192 002e 10BD     		pop	{r4, pc}
 193              	.L16:
 194              		.align	2
 195              	.L15:
 196 0030 00380140 		.word	1073821696
 197              		.cfi_endproc
 198              	.LFE121:
 200              		.section	.text.DBG_put_msg,"ax",%progbits
 201              		.align	1
 202              		.global	DBG_put_msg
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	DBG_put_msg:
 208              	.LVL19:
 209              	.LFB122:
  44:Core/Source/usart.c **** 
  45:Core/Source/usart.c **** //---------------------------------------------------------------------//
  46:Core/Source/usart.c **** int DBG_put_msg (char *pBuffer, int size)
  47:Core/Source/usart.c **** { 
 210              		.loc 1 47 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		.loc 1 47 1 is_stmt 0 view .LVU41
 215 0000 70B5     		push	{r4, r5, r6, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 4, -16
 219              		.cfi_offset 5, -12
 220              		.cfi_offset 6, -8
 221              		.cfi_offset 14, -4
 222 0002 0646     		mov	r6, r0
 223 0004 0D46     		mov	r5, r1
  48:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 224              		.loc 1 48 2 is_stmt 1 view .LVU42
 225              	.LBB3:
 226              		.loc 1 48 7 view .LVU43
 227              	.LVL20:
 228              		.loc 1 48 11 is_stmt 0 view .LVU44
 229 0006 0024     		movs	r4, #0
 230              		.loc 1 48 2 view .LVU45
 231 0008 0AE0     		b	.L18
 232              	.LVL21:
 233              	.L20:
  49:Core/Source/usart.c **** 	{
  50:Core/Source/usart.c **** 		usart_data_transmit(DBG_UART, (uint8_t)pBuffer[i]);
 234              		.loc 1 50 3 is_stmt 1 view .LVU46
 235 000a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 236 000c 0648     		ldr	r0, .L22
 237 000e FFF7FEFF 		bl	usart_data_transmit
 238              	.LVL22:
ARM GAS  /tmp/ccHmMOv1.s 			page 6


  51:Core/Source/usart.c **** 	  while(RESET == usart_flag_get(DBG_UART, USART_FLAG_TBE));
 239              		.loc 1 51 4 view .LVU47
 240              	.L19:
 241              		.loc 1 51 60 discriminator 1 view .LVU48
 242              		.loc 1 51 9 discriminator 1 view .LVU49
 243              		.loc 1 51 19 is_stmt 0 discriminator 1 view .LVU50
 244 0012 0721     		movs	r1, #7
 245 0014 0448     		ldr	r0, .L22
 246 0016 FFF7FEFF 		bl	usart_flag_get
 247              	.LVL23:
 248              		.loc 1 51 9 discriminator 1 view .LVU51
 249 001a 0028     		cmp	r0, #0
 250 001c F9D0     		beq	.L19
  48:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 251              		.loc 1 48 28 is_stmt 1 discriminator 2 view .LVU52
  48:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 252              		.loc 1 48 29 is_stmt 0 discriminator 2 view .LVU53
 253 001e 0134     		adds	r4, r4, #1
 254              	.LVL24:
 255              	.L18:
  48:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 256              		.loc 1 48 18 is_stmt 1 discriminator 1 view .LVU54
  48:Core/Source/usart.c **** 	for (int i = 0; i < size; i++)
 257              		.loc 1 48 2 is_stmt 0 discriminator 1 view .LVU55
 258 0020 AC42     		cmp	r4, r5
 259 0022 F2DB     		blt	.L20
 260              	.LBE3:
  52:Core/Source/usart.c **** 	}
  53:Core/Source/usart.c **** 	return size;
 261              		.loc 1 53 2 is_stmt 1 view .LVU56
  54:Core/Source/usart.c **** }
 262              		.loc 1 54 1 is_stmt 0 view .LVU57
 263 0024 2846     		mov	r0, r5
 264 0026 70BD     		pop	{r4, r5, r6, pc}
 265              	.LVL25:
 266              	.L23:
 267              		.loc 1 54 1 view .LVU58
 268              		.align	2
 269              	.L22:
 270 0028 00380140 		.word	1073821696
 271              		.cfi_endproc
 272              	.LFE122:
 274              		.global	DBG_buf
 275              		.section	.bss.DBG_buf,"aw",%nobits
 276              		.align	2
 279              	DBG_buf:
 280 0000 00000000 		.space	30
 280      00000000 
 280      00000000 
 280      00000000 
 280      00000000 
 281              		.text
 282              	.Letext0:
 283              		.file 2 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/m
 284              		.file 3 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 285              		.file 4 "Drivers/CMSIS/GD/GD32F30x/Include/gd32f30x.h"
 286              		.file 5 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_rcu.h"
ARM GAS  /tmp/ccHmMOv1.s 			page 7


 287              		.file 6 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_usart.h"
 288              		.file 7 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/1
 289              		.file 8 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 290              		.file 9 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 291              		.file 10 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/
 292              		.file 11 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/
 293              		.file 12 "Core/Include/gpio.h"
 294              		.file 13 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_dbg.h"
 295              		.file 14 "Core/Include/usart.h"
ARM GAS  /tmp/ccHmMOv1.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccHmMOv1.s:18     .text.fputc:0000000000000000 $t
     /tmp/ccHmMOv1.s:24     .text.fputc:0000000000000000 fputc
     /tmp/ccHmMOv1.s:69     .text.fputc:000000000000001c $d
     /tmp/ccHmMOv1.s:74     .text._write:0000000000000000 $t
     /tmp/ccHmMOv1.s:80     .text._write:0000000000000000 _write
     /tmp/ccHmMOv1.s:143    .text._write:0000000000000028 $d
     /tmp/ccHmMOv1.s:148    .text.usart0_config:0000000000000000 $t
     /tmp/ccHmMOv1.s:154    .text.usart0_config:0000000000000000 usart0_config
     /tmp/ccHmMOv1.s:196    .text.usart0_config:0000000000000030 $d
     /tmp/ccHmMOv1.s:201    .text.DBG_put_msg:0000000000000000 $t
     /tmp/ccHmMOv1.s:207    .text.DBG_put_msg:0000000000000000 DBG_put_msg
     /tmp/ccHmMOv1.s:270    .text.DBG_put_msg:0000000000000028 $d
     /tmp/ccHmMOv1.s:279    .bss.DBG_buf:0000000000000000 DBG_buf
     /tmp/ccHmMOv1.s:276    .bss.DBG_buf:0000000000000000 $d

UNDEFINED SYMBOLS
usart_data_transmit
usart_flag_get
usart0_gpio_init
rcu_periph_clock_enable
usart_deinit
usart_baudrate_set
usart_transmit_config
usart_enable
