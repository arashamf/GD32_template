ARM GAS  /tmp/ccWp3qOC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.main.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 656E635F 		.ascii	"enc_count=%ld\000"
  20      636F756E 
  20      743D256C 
  20      6400
  21              		.section	.text.main,"ax",%progbits
  22              		.align	1
  23              		.global	main
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	main:
  29              	.LFB119:
  30              		.file 1 "Core/Source/main.c"
   1:Core/Source/main.c **** //---------------------------------------------------------------------------//
   2:Core/Source/main.c **** #include "gd32f30x.h"
   3:Core/Source/main.c **** #include <stdio.h>
   4:Core/Source/main.c **** #include "systick.h"
   5:Core/Source/main.c **** #include "encoder.h"
   6:Core/Source/main.c **** #include "usart.h"
   7:Core/Source/main.c **** #include "gpio.h"
   8:Core/Source/main.c **** #include "spi.h"
   9:Core/Source/main.c **** #include "tim.h"
  10:Core/Source/main.c **** #include "OLED.h"
  11:Core/Source/main.c **** #include "typedef.h"
  12:Core/Source/main.c **** 
  13:Core/Source/main.c **** //---------------------------------------------------------------------------//
  14:Core/Source/main.c **** #define ISP_ADDR ((uint32_t)0x1FFFF000)
  15:Core/Source/main.c **** //#define MAX_CNT_TIMEOUT   15
  16:Core/Source/main.c **** //---------------------------------------------------------------------------//
  17:Core/Source/main.c **** FlagStatus sw_led = SET;
  18:Core/Source/main.c **** 
  19:Core/Source/main.c **** //---------------------------------------------------------------------------//
  20:Core/Source/main.c **** void adc_config(void);
  21:Core/Source/main.c **** void jump_to_app(uint32_t addr);
  22:Core/Source/main.c **** 
  23:Core/Source/main.c **** //---------------------------------------------------------------------------//
  24:Core/Source/main.c **** int main(void) 
  25:Core/Source/main.c **** {
ARM GAS  /tmp/ccWp3qOC.s 			page 2


  31              		.loc 1 25 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  26:Core/Source/main.c **** #ifdef HID_IAP
  27:Core/Source/main.c ****     // Soft :GD32 MCU HID IAP Programmer, Bootloader Size :8KB 
  28:Core/Source/main.c ****   // if use HID bootloader ,set ROM start addr 0x8002000 && set vector 
  29:Core/Source/main.c ****   // if not use HID bootloader ,set ROM start addr 0x8000000 && Comment out the following code 
  30:Core/Source/main.c ****   // nvic_vector_table_set(NVIC_VECTTAB_FLASH,0x2000);
  31:Core/Source/main.c ****     nvic_vector_table_set(NVIC_VECTTAB_FLASH,0x2000);
  32:Core/Source/main.c **** #endif
  33:Core/Source/main.c ****     rcu_all_reset_flag_clear();
  40              		.loc 1 33 5 view .LVU1
  41 0002 FFF7FEFF 		bl	rcu_all_reset_flag_clear
  42              	.LVL0:
  34:Core/Source/main.c ****     SystemInit ();
  43              		.loc 1 34 5 view .LVU2
  44 0006 FFF7FEFF 		bl	SystemInit
  45              	.LVL1:
  35:Core/Source/main.c ****     SystemCoreClockUpdate ();
  46              		.loc 1 35 5 view .LVU3
  47 000a FFF7FEFF 		bl	SystemCoreClockUpdate
  48              	.LVL2:
  36:Core/Source/main.c ****     systick_config();
  49              		.loc 1 36 5 view .LVU4
  50 000e FFF7FEFF 		bl	systick_config
  51              	.LVL3:
  37:Core/Source/main.c ****     nvic_priority_group_set(NVIC_PRIGROUP_PRE2_SUB2); //2 bits for pre-emption priority 2 bits for 
  52              		.loc 1 37 5 view .LVU5
  53 0012 4FF4A060 		mov	r0, #1280
  54 0016 FFF7FEFF 		bl	nvic_priority_group_set
  55              	.LVL4:
  38:Core/Source/main.c ****     gpio_config();
  56              		.loc 1 38 5 view .LVU6
  57 001a FFF7FEFF 		bl	gpio_config
  58              	.LVL5:
  39:Core/Source/main.c ****     usart0_config();
  59              		.loc 1 39 5 view .LVU7
  60 001e FFF7FEFF 		bl	usart0_config
  61              	.LVL6:
  40:Core/Source/main.c ****     dma_config();
  62              		.loc 1 40 5 view .LVU8
  63 0022 FFF7FEFF 		bl	dma_config
  64              	.LVL7:
  41:Core/Source/main.c ****     spi0_config();
  65              		.loc 1 41 5 view .LVU9
  66 0026 FFF7FEFF 		bl	spi0_config
  67              	.LVL8:
  42:Core/Source/main.c ****     OLED_init();
  68              		.loc 1 42 5 view .LVU10
  69 002a FFF7FEFF 		bl	OLED_init
  70              	.LVL9:
ARM GAS  /tmp/ccWp3qOC.s 			page 3


  43:Core/Source/main.c ****     timer_delay_init ();
  71              		.loc 1 43 5 view .LVU11
  72 002e FFF7FEFF 		bl	timer_delay_init
  73              	.LVL10:
  44:Core/Source/main.c **** 
  45:Core/Source/main.c ****     rcu_ckout0_config(RCU_CKOUT0SRC_CKSYS); //–≤—ã–≤–æ–¥ —Å–∏—Å—Ç–µ–º–Ω–æ–π —á–∞—Å—Ç–æ—Ç—ã –Ω–∞ –≤—
  74              		.loc 1 45 5 view .LVU12
  75 0032 4FF08060 		mov	r0, #67108864
  76 0036 FFF7FEFF 		bl	rcu_ckout0_config
  77              	.LVL11:
  46:Core/Source/main.c **** 
  47:Core/Source/main.c **** 	FontSet(Segoe_UI_Eng_12);
  78              		.loc 1 47 2 view .LVU13
  79 003a 1648     		ldr	r0, .L8
  80 003c FFF7FEFF 		bl	FontSet
  81              	.LVL12:
  48:Core/Source/main.c ****     snprintf(lcd_buf, 20,"enc_count=%ld", enc_count);
  82              		.loc 1 48 5 view .LVU14
  83 0040 154C     		ldr	r4, .L8+4
  84 0042 164B     		ldr	r3, .L8+8
  85 0044 1B68     		ldr	r3, [r3]
  86 0046 164A     		ldr	r2, .L8+12
  87 0048 1421     		movs	r1, #20
  88 004a 2046     		mov	r0, r4
  89 004c FFF7FEFF 		bl	snprintf
  90              	.LVL13:
  49:Core/Source/main.c ****     OLED_DrawStr(lcd_buf, 5, 5);	//
  91              		.loc 1 49 5 view .LVU15
  92 0050 0522     		movs	r2, #5
  93 0052 1146     		mov	r1, r2
  94 0054 2046     		mov	r0, r4
  95 0056 FFF7FEFF 		bl	OLED_DrawStr
  96              	.LVL14:
  50:Core/Source/main.c ****     OLED_UpdScreen_DMA();
  97              		.loc 1 50 5 view .LVU16
  98 005a FFF7FEFF 		bl	OLED_UpdScreen_DMA
  99              	.LVL15:
  51:Core/Source/main.c **** 
  52:Core/Source/main.c ****     LED(ON);
 100              		.loc 1 52 5 view .LVU17
 101 005e 0421     		movs	r1, #4
 102 0060 1048     		ldr	r0, .L8+16
 103 0062 FFF7FEFF 		bl	gpio_bit_set
 104              	.LVL16:
 105 0066 0EE0     		b	.L2
 106              	.LVL17:
 107              	.L4:
 108              	.LBB4:
  53:Core/Source/main.c **** 
  54:Core/Source/main.c ****     while (1) 
  55:Core/Source/main.c ****     {
  56:Core/Source/main.c ****         for (uint32_t count = 0; count < 500000; count++)
  57:Core/Source/main.c ****         {
  58:Core/Source/main.c ****             read_data_encoder();
 109              		.loc 1 58 13 discriminator 3 view .LVU18
 110 0068 FFF7FEFF 		bl	read_data_encoder
 111              	.LVL18:
ARM GAS  /tmp/ccWp3qOC.s 			page 4


  56:Core/Source/main.c ****         {
 112              		.loc 1 56 50 discriminator 3 view .LVU19
  56:Core/Source/main.c ****         {
 113              		.loc 1 56 55 is_stmt 0 discriminator 3 view .LVU20
 114 006c 0134     		adds	r4, r4, #1
 115              	.LVL19:
 116              	.L3:
  56:Core/Source/main.c ****         {
 117              		.loc 1 56 34 is_stmt 1 discriminator 1 view .LVU21
  56:Core/Source/main.c ****         {
 118              		.loc 1 56 9 is_stmt 0 discriminator 1 view .LVU22
 119 006e 0E4B     		ldr	r3, .L8+20
 120 0070 9C42     		cmp	r4, r3
 121 0072 F9D9     		bls	.L4
 122              	.LBE4:
  59:Core/Source/main.c ****         }
  60:Core/Source/main.c ****         TOOGLE_LED();
 123              		.loc 1 60 9 is_stmt 1 view .LVU23
 124 0074 0421     		movs	r1, #4
 125 0076 0B48     		ldr	r0, .L8+16
 126 0078 FFF7FEFF 		bl	gpio_output_bit_get
 127              	.LVL20:
 128 007c 28B9     		cbnz	r0, .L5
 129              		.loc 1 60 9 is_stmt 0 discriminator 1 view .LVU24
 130 007e 0421     		movs	r1, #4
 131 0080 0848     		ldr	r0, .L8+16
 132 0082 FFF7FEFF 		bl	gpio_bit_set
 133              	.LVL21:
 134              	.L2:
  54:Core/Source/main.c ****     {
 135              		.loc 1 54 5 is_stmt 1 view .LVU25
  56:Core/Source/main.c ****         {
 136              		.loc 1 56 9 view .LVU26
 137              	.LBB5:
  56:Core/Source/main.c ****         {
 138              		.loc 1 56 14 view .LVU27
  56:Core/Source/main.c ****         {
 139              		.loc 1 56 23 is_stmt 0 view .LVU28
 140 0086 0024     		movs	r4, #0
  56:Core/Source/main.c ****         {
 141              		.loc 1 56 9 view .LVU29
 142 0088 F1E7     		b	.L3
 143              	.LVL22:
 144              	.L5:
  56:Core/Source/main.c ****         {
 145              		.loc 1 56 9 view .LVU30
 146              	.LBE5:
 147              		.loc 1 60 9 discriminator 2 view .LVU31
 148 008a 0421     		movs	r1, #4
 149 008c 0548     		ldr	r0, .L8+16
 150 008e FFF7FEFF 		bl	gpio_bit_reset
 151              	.LVL23:
 152 0092 F8E7     		b	.L2
 153              	.L9:
 154              		.align	2
 155              	.L8:
 156 0094 00000000 		.word	Segoe_UI_Eng_12
ARM GAS  /tmp/ccWp3qOC.s 			page 5


 157 0098 00000000 		.word	lcd_buf
 158 009c 00000000 		.word	enc_count
 159 00a0 00000000 		.word	.LC0
 160 00a4 000C0140 		.word	1073810432
 161 00a8 1FA10700 		.word	499999
 162              		.cfi_endproc
 163              	.LFE119:
 165              		.section	.text.jump_to_app,"ax",%progbits
 166              		.align	1
 167              		.global	jump_to_app
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	jump_to_app:
 173              	.LVL24:
 174              	.LFB120:
  61:Core/Source/main.c ****     }
  62:Core/Source/main.c **** 
  63:Core/Source/main.c **** }
  64:Core/Source/main.c **** 
  65:Core/Source/main.c **** //---------------------------------------------------------------------------//
  66:Core/Source/main.c **** void jump_to_app(uint32_t addr) {
 175              		.loc 1 66 33 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		.loc 1 66 33 is_stmt 0 view .LVU33
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
  67:Core/Source/main.c ****     uint32_t app_address;
 185              		.loc 1 67 5 is_stmt 1 view .LVU34
  68:Core/Source/main.c ****     void *(*application)(void);
 186              		.loc 1 68 5 view .LVU35
  69:Core/Source/main.c **** 
  70:Core/Source/main.c ****     /* test if user code is programmed starting from address */
  71:Core/Source/main.c ****     if (((*(__IO uint32_t *) addr) & 0x2FFE0000) == 0x20000000) {
 187              		.loc 1 71 5 view .LVU36
 188              		.loc 1 71 11 is_stmt 0 view .LVU37
 189 0002 0268     		ldr	r2, [r0]
 190              		.loc 1 71 36 view .LVU38
 191 0004 054B     		ldr	r3, .L14
 192 0006 1340     		ands	r3, r3, r2
 193              		.loc 1 71 8 view .LVU39
 194 0008 B3F1005F 		cmp	r3, #536870912
 195 000c 00D0     		beq	.L13
 196              	.LVL25:
 197              	.L10:
  72:Core/Source/main.c ****         app_address = *(__IO uint32_t *) (addr + 4);
  73:Core/Source/main.c ****         application = (void *(*)(void)) app_address;
  74:Core/Source/main.c **** 
  75:Core/Source/main.c ****         /* initialize user application's stack pointer */
  76:Core/Source/main.c ****         __set_MSP(*(__IO uint32_t *) addr);
  77:Core/Source/main.c **** 
  78:Core/Source/main.c ****         /* jump to application */
ARM GAS  /tmp/ccWp3qOC.s 			page 6


  79:Core/Source/main.c ****         application();
  80:Core/Source/main.c ****     }
  81:Core/Source/main.c **** }
 198              		.loc 1 81 1 view .LVU40
 199 000e 08BD     		pop	{r3, pc}
 200              	.LVL26:
 201              	.L13:
  72:Core/Source/main.c ****         app_address = *(__IO uint32_t *) (addr + 4);
 202              		.loc 1 72 9 is_stmt 1 view .LVU41
  72:Core/Source/main.c ****         app_address = *(__IO uint32_t *) (addr + 4);
 203              		.loc 1 72 21 is_stmt 0 view .LVU42
 204 0010 4368     		ldr	r3, [r0, #4]
 205              	.LVL27:
  73:Core/Source/main.c **** 
 206              		.loc 1 73 9 is_stmt 1 view .LVU43
  76:Core/Source/main.c **** 
 207              		.loc 1 76 9 view .LVU44
 208 0012 0268     		ldr	r2, [r0]
 209              	.LVL28:
 210              	.LBB6:
 211              	.LBI6:
 212              		.file 2 "Drivers/CMSIS/core_cmFunc.h"
   1:Drivers/CMSIS/core_cmFunc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:Drivers/CMSIS/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:Drivers/CMSIS/core_cmFunc.h ****  * @version  V3.01
   5:Drivers/CMSIS/core_cmFunc.h ****  * @date     06. March 2012
   6:Drivers/CMSIS/core_cmFunc.h ****  *
   7:Drivers/CMSIS/core_cmFunc.h ****  * @note
   8:Drivers/CMSIS/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/core_cmFunc.h ****  *
  10:Drivers/CMSIS/core_cmFunc.h ****  * @par
  11:Drivers/CMSIS/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:Drivers/CMSIS/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:Drivers/CMSIS/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors.
  14:Drivers/CMSIS/core_cmFunc.h ****  *
  15:Drivers/CMSIS/core_cmFunc.h ****  * @par
  16:Drivers/CMSIS/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:Drivers/CMSIS/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:Drivers/CMSIS/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:Drivers/CMSIS/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:Drivers/CMSIS/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:Drivers/CMSIS/core_cmFunc.h ****  *
  22:Drivers/CMSIS/core_cmFunc.h ****  ******************************************************************************/
  23:Drivers/CMSIS/core_cmFunc.h **** 
  24:Drivers/CMSIS/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:Drivers/CMSIS/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:Drivers/CMSIS/core_cmFunc.h **** 
  27:Drivers/CMSIS/core_cmFunc.h **** 
  28:Drivers/CMSIS/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  29:Drivers/CMSIS/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  30:Drivers/CMSIS/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  31:Drivers/CMSIS/core_cmFunc.h ****   @{
  32:Drivers/CMSIS/core_cmFunc.h ****  */
  33:Drivers/CMSIS/core_cmFunc.h **** 
  34:Drivers/CMSIS/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:Drivers/CMSIS/core_cmFunc.h **** /* ARM armcc specific functions */
ARM GAS  /tmp/ccWp3qOC.s 			page 7


  36:Drivers/CMSIS/core_cmFunc.h **** 
  37:Drivers/CMSIS/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  38:Drivers/CMSIS/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:Drivers/CMSIS/core_cmFunc.h **** #endif
  40:Drivers/CMSIS/core_cmFunc.h **** 
  41:Drivers/CMSIS/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  42:Drivers/CMSIS/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  43:Drivers/CMSIS/core_cmFunc.h **** 
  44:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Control Register
  45:Drivers/CMSIS/core_cmFunc.h **** 
  46:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the Control Register.
  47:Drivers/CMSIS/core_cmFunc.h **** 
  48:Drivers/CMSIS/core_cmFunc.h ****     \return               Control Register value
  49:Drivers/CMSIS/core_cmFunc.h ****  */
  50:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  51:Drivers/CMSIS/core_cmFunc.h **** {
  52:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  53:Drivers/CMSIS/core_cmFunc.h ****   return(__regControl);
  54:Drivers/CMSIS/core_cmFunc.h **** }
  55:Drivers/CMSIS/core_cmFunc.h **** 
  56:Drivers/CMSIS/core_cmFunc.h **** 
  57:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Control Register
  58:Drivers/CMSIS/core_cmFunc.h **** 
  59:Drivers/CMSIS/core_cmFunc.h ****     This function writes the given value to the Control Register.
  60:Drivers/CMSIS/core_cmFunc.h **** 
  61:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  62:Drivers/CMSIS/core_cmFunc.h ****  */
  63:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  64:Drivers/CMSIS/core_cmFunc.h **** {
  65:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  66:Drivers/CMSIS/core_cmFunc.h ****   __regControl = control;
  67:Drivers/CMSIS/core_cmFunc.h **** }
  68:Drivers/CMSIS/core_cmFunc.h **** 
  69:Drivers/CMSIS/core_cmFunc.h **** 
  70:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get IPSR Register
  71:Drivers/CMSIS/core_cmFunc.h **** 
  72:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  73:Drivers/CMSIS/core_cmFunc.h **** 
  74:Drivers/CMSIS/core_cmFunc.h ****     \return               IPSR Register value
  75:Drivers/CMSIS/core_cmFunc.h ****  */
  76:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  77:Drivers/CMSIS/core_cmFunc.h **** {
  78:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  79:Drivers/CMSIS/core_cmFunc.h ****   return(__regIPSR);
  80:Drivers/CMSIS/core_cmFunc.h **** }
  81:Drivers/CMSIS/core_cmFunc.h **** 
  82:Drivers/CMSIS/core_cmFunc.h **** 
  83:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get APSR Register
  84:Drivers/CMSIS/core_cmFunc.h **** 
  85:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the APSR Register.
  86:Drivers/CMSIS/core_cmFunc.h **** 
  87:Drivers/CMSIS/core_cmFunc.h ****     \return               APSR Register value
  88:Drivers/CMSIS/core_cmFunc.h ****  */
  89:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  90:Drivers/CMSIS/core_cmFunc.h **** {
  91:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  92:Drivers/CMSIS/core_cmFunc.h ****   return(__regAPSR);
ARM GAS  /tmp/ccWp3qOC.s 			page 8


  93:Drivers/CMSIS/core_cmFunc.h **** }
  94:Drivers/CMSIS/core_cmFunc.h **** 
  95:Drivers/CMSIS/core_cmFunc.h **** 
  96:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get xPSR Register
  97:Drivers/CMSIS/core_cmFunc.h **** 
  98:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  99:Drivers/CMSIS/core_cmFunc.h **** 
 100:Drivers/CMSIS/core_cmFunc.h ****     \return               xPSR Register value
 101:Drivers/CMSIS/core_cmFunc.h ****  */
 102:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 103:Drivers/CMSIS/core_cmFunc.h **** {
 104:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 105:Drivers/CMSIS/core_cmFunc.h ****   return(__regXPSR);
 106:Drivers/CMSIS/core_cmFunc.h **** }
 107:Drivers/CMSIS/core_cmFunc.h **** 
 108:Drivers/CMSIS/core_cmFunc.h **** 
 109:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 110:Drivers/CMSIS/core_cmFunc.h **** 
 111:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 112:Drivers/CMSIS/core_cmFunc.h **** 
 113:Drivers/CMSIS/core_cmFunc.h ****     \return               PSP Register value
 114:Drivers/CMSIS/core_cmFunc.h ****  */
 115:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 116:Drivers/CMSIS/core_cmFunc.h **** {
 117:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 118:Drivers/CMSIS/core_cmFunc.h ****   return(__regProcessStackPointer);
 119:Drivers/CMSIS/core_cmFunc.h **** }
 120:Drivers/CMSIS/core_cmFunc.h **** 
 121:Drivers/CMSIS/core_cmFunc.h **** 
 122:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 123:Drivers/CMSIS/core_cmFunc.h **** 
 124:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 125:Drivers/CMSIS/core_cmFunc.h **** 
 126:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 127:Drivers/CMSIS/core_cmFunc.h ****  */
 128:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 129:Drivers/CMSIS/core_cmFunc.h **** {
 130:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 131:Drivers/CMSIS/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 132:Drivers/CMSIS/core_cmFunc.h **** }
 133:Drivers/CMSIS/core_cmFunc.h **** 
 134:Drivers/CMSIS/core_cmFunc.h **** 
 135:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 136:Drivers/CMSIS/core_cmFunc.h **** 
 137:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 138:Drivers/CMSIS/core_cmFunc.h **** 
 139:Drivers/CMSIS/core_cmFunc.h ****     \return               MSP Register value
 140:Drivers/CMSIS/core_cmFunc.h ****  */
 141:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 142:Drivers/CMSIS/core_cmFunc.h **** {
 143:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 144:Drivers/CMSIS/core_cmFunc.h ****   return(__regMainStackPointer);
 145:Drivers/CMSIS/core_cmFunc.h **** }
 146:Drivers/CMSIS/core_cmFunc.h **** 
 147:Drivers/CMSIS/core_cmFunc.h **** 
 148:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 149:Drivers/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccWp3qOC.s 			page 9


 150:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 151:Drivers/CMSIS/core_cmFunc.h **** 
 152:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 153:Drivers/CMSIS/core_cmFunc.h ****  */
 154:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 155:Drivers/CMSIS/core_cmFunc.h **** {
 156:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 157:Drivers/CMSIS/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 158:Drivers/CMSIS/core_cmFunc.h **** }
 159:Drivers/CMSIS/core_cmFunc.h **** 
 160:Drivers/CMSIS/core_cmFunc.h **** 
 161:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Priority Mask
 162:Drivers/CMSIS/core_cmFunc.h **** 
 163:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 164:Drivers/CMSIS/core_cmFunc.h **** 
 165:Drivers/CMSIS/core_cmFunc.h ****     \return               Priority Mask value
 166:Drivers/CMSIS/core_cmFunc.h ****  */
 167:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 168:Drivers/CMSIS/core_cmFunc.h **** {
 169:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 170:Drivers/CMSIS/core_cmFunc.h ****   return(__regPriMask);
 171:Drivers/CMSIS/core_cmFunc.h **** }
 172:Drivers/CMSIS/core_cmFunc.h **** 
 173:Drivers/CMSIS/core_cmFunc.h **** 
 174:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Priority Mask
 175:Drivers/CMSIS/core_cmFunc.h **** 
 176:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 177:Drivers/CMSIS/core_cmFunc.h **** 
 178:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 179:Drivers/CMSIS/core_cmFunc.h ****  */
 180:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 181:Drivers/CMSIS/core_cmFunc.h **** {
 182:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 183:Drivers/CMSIS/core_cmFunc.h ****   __regPriMask = (priMask);
 184:Drivers/CMSIS/core_cmFunc.h **** }
 185:Drivers/CMSIS/core_cmFunc.h **** 
 186:Drivers/CMSIS/core_cmFunc.h **** 
 187:Drivers/CMSIS/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 188:Drivers/CMSIS/core_cmFunc.h **** 
 189:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Enable FIQ
 190:Drivers/CMSIS/core_cmFunc.h **** 
 191:Drivers/CMSIS/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 192:Drivers/CMSIS/core_cmFunc.h ****     Can only be executed in Privileged modes.
 193:Drivers/CMSIS/core_cmFunc.h ****  */
 194:Drivers/CMSIS/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 195:Drivers/CMSIS/core_cmFunc.h **** 
 196:Drivers/CMSIS/core_cmFunc.h **** 
 197:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Disable FIQ
 198:Drivers/CMSIS/core_cmFunc.h **** 
 199:Drivers/CMSIS/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 200:Drivers/CMSIS/core_cmFunc.h ****     Can only be executed in Privileged modes.
 201:Drivers/CMSIS/core_cmFunc.h ****  */
 202:Drivers/CMSIS/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 203:Drivers/CMSIS/core_cmFunc.h **** 
 204:Drivers/CMSIS/core_cmFunc.h **** 
 205:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Base Priority
 206:Drivers/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccWp3qOC.s 			page 10


 207:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 208:Drivers/CMSIS/core_cmFunc.h **** 
 209:Drivers/CMSIS/core_cmFunc.h ****     \return               Base Priority register value
 210:Drivers/CMSIS/core_cmFunc.h ****  */
 211:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 212:Drivers/CMSIS/core_cmFunc.h **** {
 213:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 214:Drivers/CMSIS/core_cmFunc.h ****   return(__regBasePri);
 215:Drivers/CMSIS/core_cmFunc.h **** }
 216:Drivers/CMSIS/core_cmFunc.h **** 
 217:Drivers/CMSIS/core_cmFunc.h **** 
 218:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Base Priority
 219:Drivers/CMSIS/core_cmFunc.h **** 
 220:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 221:Drivers/CMSIS/core_cmFunc.h **** 
 222:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 223:Drivers/CMSIS/core_cmFunc.h ****  */
 224:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 225:Drivers/CMSIS/core_cmFunc.h **** {
 226:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 227:Drivers/CMSIS/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 228:Drivers/CMSIS/core_cmFunc.h **** }
 229:Drivers/CMSIS/core_cmFunc.h **** 
 230:Drivers/CMSIS/core_cmFunc.h **** 
 231:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Fault Mask
 232:Drivers/CMSIS/core_cmFunc.h **** 
 233:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 234:Drivers/CMSIS/core_cmFunc.h **** 
 235:Drivers/CMSIS/core_cmFunc.h ****     \return               Fault Mask register value
 236:Drivers/CMSIS/core_cmFunc.h ****  */
 237:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 238:Drivers/CMSIS/core_cmFunc.h **** {
 239:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 240:Drivers/CMSIS/core_cmFunc.h ****   return(__regFaultMask);
 241:Drivers/CMSIS/core_cmFunc.h **** }
 242:Drivers/CMSIS/core_cmFunc.h **** 
 243:Drivers/CMSIS/core_cmFunc.h **** 
 244:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Fault Mask
 245:Drivers/CMSIS/core_cmFunc.h **** 
 246:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 247:Drivers/CMSIS/core_cmFunc.h **** 
 248:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 249:Drivers/CMSIS/core_cmFunc.h ****  */
 250:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 251:Drivers/CMSIS/core_cmFunc.h **** {
 252:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 253:Drivers/CMSIS/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 254:Drivers/CMSIS/core_cmFunc.h **** }
 255:Drivers/CMSIS/core_cmFunc.h **** 
 256:Drivers/CMSIS/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 257:Drivers/CMSIS/core_cmFunc.h **** 
 258:Drivers/CMSIS/core_cmFunc.h **** 
 259:Drivers/CMSIS/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 260:Drivers/CMSIS/core_cmFunc.h **** 
 261:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get FPSCR
 262:Drivers/CMSIS/core_cmFunc.h **** 
 263:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
ARM GAS  /tmp/ccWp3qOC.s 			page 11


 264:Drivers/CMSIS/core_cmFunc.h **** 
 265:Drivers/CMSIS/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 266:Drivers/CMSIS/core_cmFunc.h ****  */
 267:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 268:Drivers/CMSIS/core_cmFunc.h **** {
 269:Drivers/CMSIS/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 270:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 271:Drivers/CMSIS/core_cmFunc.h ****   return(__regfpscr);
 272:Drivers/CMSIS/core_cmFunc.h **** #else
 273:Drivers/CMSIS/core_cmFunc.h ****    return(0);
 274:Drivers/CMSIS/core_cmFunc.h **** #endif
 275:Drivers/CMSIS/core_cmFunc.h **** }
 276:Drivers/CMSIS/core_cmFunc.h **** 
 277:Drivers/CMSIS/core_cmFunc.h **** 
 278:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set FPSCR
 279:Drivers/CMSIS/core_cmFunc.h **** 
 280:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 281:Drivers/CMSIS/core_cmFunc.h **** 
 282:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 283:Drivers/CMSIS/core_cmFunc.h ****  */
 284:Drivers/CMSIS/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 285:Drivers/CMSIS/core_cmFunc.h **** {
 286:Drivers/CMSIS/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 287:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 288:Drivers/CMSIS/core_cmFunc.h ****   __regfpscr = (fpscr);
 289:Drivers/CMSIS/core_cmFunc.h **** #endif
 290:Drivers/CMSIS/core_cmFunc.h **** }
 291:Drivers/CMSIS/core_cmFunc.h **** 
 292:Drivers/CMSIS/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 293:Drivers/CMSIS/core_cmFunc.h **** 
 294:Drivers/CMSIS/core_cmFunc.h **** 
 295:Drivers/CMSIS/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:Drivers/CMSIS/core_cmFunc.h **** /* IAR iccarm specific functions */
 297:Drivers/CMSIS/core_cmFunc.h **** 
 298:Drivers/CMSIS/core_cmFunc.h **** #include <cmsis_iar.h>
 299:Drivers/CMSIS/core_cmFunc.h **** 
 300:Drivers/CMSIS/core_cmFunc.h **** 
 301:Drivers/CMSIS/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:Drivers/CMSIS/core_cmFunc.h **** /* TI CCS specific functions */
 303:Drivers/CMSIS/core_cmFunc.h **** 
 304:Drivers/CMSIS/core_cmFunc.h **** #include <cmsis_ccs.h>
 305:Drivers/CMSIS/core_cmFunc.h **** 
 306:Drivers/CMSIS/core_cmFunc.h **** 
 307:Drivers/CMSIS/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:Drivers/CMSIS/core_cmFunc.h **** /* GNU gcc specific functions */
 309:Drivers/CMSIS/core_cmFunc.h **** 
 310:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 311:Drivers/CMSIS/core_cmFunc.h **** 
 312:Drivers/CMSIS/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 313:Drivers/CMSIS/core_cmFunc.h ****   Can only be executed in Privileged modes.
 314:Drivers/CMSIS/core_cmFunc.h ****  */
 315:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 316:Drivers/CMSIS/core_cmFunc.h **** {
 317:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 318:Drivers/CMSIS/core_cmFunc.h **** }
 319:Drivers/CMSIS/core_cmFunc.h **** 
 320:Drivers/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccWp3qOC.s 			page 12


 321:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 322:Drivers/CMSIS/core_cmFunc.h **** 
 323:Drivers/CMSIS/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 324:Drivers/CMSIS/core_cmFunc.h ****   Can only be executed in Privileged modes.
 325:Drivers/CMSIS/core_cmFunc.h ****  */
 326:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 327:Drivers/CMSIS/core_cmFunc.h **** {
 328:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 329:Drivers/CMSIS/core_cmFunc.h **** }
 330:Drivers/CMSIS/core_cmFunc.h **** 
 331:Drivers/CMSIS/core_cmFunc.h **** 
 332:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Control Register
 333:Drivers/CMSIS/core_cmFunc.h **** 
 334:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the Control Register.
 335:Drivers/CMSIS/core_cmFunc.h **** 
 336:Drivers/CMSIS/core_cmFunc.h ****     \return               Control Register value
 337:Drivers/CMSIS/core_cmFunc.h ****  */
 338:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 339:Drivers/CMSIS/core_cmFunc.h **** {
 340:Drivers/CMSIS/core_cmFunc.h ****   uint32_t result;
 341:Drivers/CMSIS/core_cmFunc.h **** 
 342:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 343:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 344:Drivers/CMSIS/core_cmFunc.h **** }
 345:Drivers/CMSIS/core_cmFunc.h **** 
 346:Drivers/CMSIS/core_cmFunc.h **** 
 347:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Control Register
 348:Drivers/CMSIS/core_cmFunc.h **** 
 349:Drivers/CMSIS/core_cmFunc.h ****     This function writes the given value to the Control Register.
 350:Drivers/CMSIS/core_cmFunc.h **** 
 351:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 352:Drivers/CMSIS/core_cmFunc.h ****  */
 353:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 354:Drivers/CMSIS/core_cmFunc.h **** {
 355:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 356:Drivers/CMSIS/core_cmFunc.h **** }
 357:Drivers/CMSIS/core_cmFunc.h **** 
 358:Drivers/CMSIS/core_cmFunc.h **** 
 359:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get IPSR Register
 360:Drivers/CMSIS/core_cmFunc.h **** 
 361:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the IPSR Register.
 362:Drivers/CMSIS/core_cmFunc.h **** 
 363:Drivers/CMSIS/core_cmFunc.h ****     \return               IPSR Register value
 364:Drivers/CMSIS/core_cmFunc.h ****  */
 365:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 366:Drivers/CMSIS/core_cmFunc.h **** {
 367:Drivers/CMSIS/core_cmFunc.h ****   uint32_t result;
 368:Drivers/CMSIS/core_cmFunc.h **** 
 369:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 370:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 371:Drivers/CMSIS/core_cmFunc.h **** }
 372:Drivers/CMSIS/core_cmFunc.h **** 
 373:Drivers/CMSIS/core_cmFunc.h **** 
 374:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get APSR Register
 375:Drivers/CMSIS/core_cmFunc.h **** 
 376:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the APSR Register.
 377:Drivers/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccWp3qOC.s 			page 13


 378:Drivers/CMSIS/core_cmFunc.h ****     \return               APSR Register value
 379:Drivers/CMSIS/core_cmFunc.h ****  */
 380:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 381:Drivers/CMSIS/core_cmFunc.h **** {
 382:Drivers/CMSIS/core_cmFunc.h ****   uint32_t result;
 383:Drivers/CMSIS/core_cmFunc.h **** 
 384:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 385:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 386:Drivers/CMSIS/core_cmFunc.h **** }
 387:Drivers/CMSIS/core_cmFunc.h **** 
 388:Drivers/CMSIS/core_cmFunc.h **** 
 389:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get xPSR Register
 390:Drivers/CMSIS/core_cmFunc.h **** 
 391:Drivers/CMSIS/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 392:Drivers/CMSIS/core_cmFunc.h **** 
 393:Drivers/CMSIS/core_cmFunc.h ****     \return               xPSR Register value
 394:Drivers/CMSIS/core_cmFunc.h ****  */
 395:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 396:Drivers/CMSIS/core_cmFunc.h **** {
 397:Drivers/CMSIS/core_cmFunc.h ****   uint32_t result;
 398:Drivers/CMSIS/core_cmFunc.h **** 
 399:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 400:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 401:Drivers/CMSIS/core_cmFunc.h **** }
 402:Drivers/CMSIS/core_cmFunc.h **** 
 403:Drivers/CMSIS/core_cmFunc.h **** 
 404:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 405:Drivers/CMSIS/core_cmFunc.h **** 
 406:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 407:Drivers/CMSIS/core_cmFunc.h **** 
 408:Drivers/CMSIS/core_cmFunc.h ****     \return               PSP Register value
 409:Drivers/CMSIS/core_cmFunc.h ****  */
 410:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 411:Drivers/CMSIS/core_cmFunc.h **** {
 412:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t result;
 413:Drivers/CMSIS/core_cmFunc.h **** 
 414:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 415:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 416:Drivers/CMSIS/core_cmFunc.h **** }
 417:Drivers/CMSIS/core_cmFunc.h **** 
 418:Drivers/CMSIS/core_cmFunc.h **** 
 419:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 420:Drivers/CMSIS/core_cmFunc.h **** 
 421:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 422:Drivers/CMSIS/core_cmFunc.h **** 
 423:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 424:Drivers/CMSIS/core_cmFunc.h ****  */
 425:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 426:Drivers/CMSIS/core_cmFunc.h **** {
 427:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 428:Drivers/CMSIS/core_cmFunc.h **** }
 429:Drivers/CMSIS/core_cmFunc.h **** 
 430:Drivers/CMSIS/core_cmFunc.h **** 
 431:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 432:Drivers/CMSIS/core_cmFunc.h **** 
 433:Drivers/CMSIS/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 434:Drivers/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccWp3qOC.s 			page 14


 435:Drivers/CMSIS/core_cmFunc.h ****     \return               MSP Register value
 436:Drivers/CMSIS/core_cmFunc.h ****  */
 437:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 438:Drivers/CMSIS/core_cmFunc.h **** {
 439:Drivers/CMSIS/core_cmFunc.h ****   register uint32_t result;
 440:Drivers/CMSIS/core_cmFunc.h **** 
 441:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 442:Drivers/CMSIS/core_cmFunc.h ****   return(result);
 443:Drivers/CMSIS/core_cmFunc.h **** }
 444:Drivers/CMSIS/core_cmFunc.h **** 
 445:Drivers/CMSIS/core_cmFunc.h **** 
 446:Drivers/CMSIS/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 447:Drivers/CMSIS/core_cmFunc.h **** 
 448:Drivers/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 449:Drivers/CMSIS/core_cmFunc.h **** 
 450:Drivers/CMSIS/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 451:Drivers/CMSIS/core_cmFunc.h ****  */
 452:Drivers/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 213              		.loc 2 452 57 view .LVU45
 214              	.LBB7:
 453:Drivers/CMSIS/core_cmFunc.h **** {
 454:Drivers/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
 215              		.loc 2 454 3 view .LVU46
 216              		.syntax unified
 217              	@ 454 "Drivers/CMSIS/core_cmFunc.h" 1
 218 0014 82F30888 		MSR msp, r2
 219              	
 220              	@ 0 "" 2
 221              	.LVL29:
 222              		.loc 2 454 3 is_stmt 0 view .LVU47
 223              		.thumb
 224              		.syntax unified
 225              	.LBE7:
 226              	.LBE6:
  79:Core/Source/main.c ****     }
 227              		.loc 1 79 9 is_stmt 1 view .LVU48
 228 0018 9847     		blx	r3
 229              	.LVL30:
 230              		.loc 1 81 1 is_stmt 0 view .LVU49
 231 001a F8E7     		b	.L10
 232              	.L15:
 233              		.align	2
 234              	.L14:
 235 001c 0000FE2F 		.word	805175296
 236              		.cfi_endproc
 237              	.LFE120:
 239              		.section	.text._read,"ax",%progbits
 240              		.align	1
 241              		.global	_read
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	_read:
 247              	.LVL31:
 248              	.LFB121:
  82:Core/Source/main.c **** 
  83:Core/Source/main.c **** //---------------------------------------------------------------------------//
ARM GAS  /tmp/ccWp3qOC.s 			page 15


  84:Core/Source/main.c **** int _read(int fd, char *pBuffer, int size) {
 249              		.loc 1 84 44 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		.loc 1 84 44 is_stmt 0 view .LVU51
 254 0000 70B5     		push	{r4, r5, r6, lr}
 255              	.LCFI2:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 6, -8
 260              		.cfi_offset 14, -4
 261 0002 0E46     		mov	r6, r1
 262 0004 1546     		mov	r5, r2
  85:Core/Source/main.c ****     for (int i = 0; i < size; i++) {
 263              		.loc 1 85 5 is_stmt 1 view .LVU52
 264              	.LBB8:
 265              		.loc 1 85 10 view .LVU53
 266              	.LVL32:
 267              		.loc 1 85 14 is_stmt 0 view .LVU54
 268 0006 0024     		movs	r4, #0
 269              		.loc 1 85 5 view .LVU55
 270 0008 0AE0     		b	.L17
 271              	.LVL33:
 272              	.L18:
  86:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
  87:Core/Source/main.c ****         }
 273              		.loc 1 87 9 is_stmt 1 discriminator 1 view .LVU56
  86:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 274              		.loc 1 86 15 discriminator 1 view .LVU57
  86:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 275              		.loc 1 86 16 is_stmt 0 discriminator 1 view .LVU58
 276 000a 0521     		movs	r1, #5
 277 000c 0648     		ldr	r0, .L20
 278 000e FFF7FEFF 		bl	usart_flag_get
 279              	.LVL34:
  86:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 280              		.loc 1 86 15 discriminator 1 view .LVU59
 281 0012 0128     		cmp	r0, #1
 282 0014 F9D0     		beq	.L18
  88:Core/Source/main.c **** 
  89:Core/Source/main.c ****         pBuffer[i] = usart_data_receive(USART0);
 283              		.loc 1 89 9 is_stmt 1 discriminator 2 view .LVU60
 284              		.loc 1 89 22 is_stmt 0 discriminator 2 view .LVU61
 285 0016 0448     		ldr	r0, .L20
 286 0018 FFF7FEFF 		bl	usart_data_receive
 287              	.LVL35:
 288              		.loc 1 89 20 discriminator 2 view .LVU62
 289 001c 3055     		strb	r0, [r6, r4]
  85:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 290              		.loc 1 85 31 is_stmt 1 discriminator 2 view .LVU63
  85:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 291              		.loc 1 85 32 is_stmt 0 discriminator 2 view .LVU64
 292 001e 0134     		adds	r4, r4, #1
 293              	.LVL36:
 294              	.L17:
ARM GAS  /tmp/ccWp3qOC.s 			page 16


  85:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 295              		.loc 1 85 21 is_stmt 1 discriminator 1 view .LVU65
  85:Core/Source/main.c ****         while (usart_flag_get(USART0, USART_FLAG_RBNE) == 1) {
 296              		.loc 1 85 5 is_stmt 0 discriminator 1 view .LVU66
 297 0020 AC42     		cmp	r4, r5
 298 0022 F2DB     		blt	.L18
 299              	.LBE8:
  90:Core/Source/main.c ****     }
  91:Core/Source/main.c ****     return size;
 300              		.loc 1 91 5 is_stmt 1 view .LVU67
  92:Core/Source/main.c **** }
 301              		.loc 1 92 1 is_stmt 0 view .LVU68
 302 0024 2846     		mov	r0, r5
 303 0026 70BD     		pop	{r4, r5, r6, pc}
 304              	.LVL37:
 305              	.L21:
 306              		.loc 1 92 1 view .LVU69
 307              		.align	2
 308              	.L20:
 309 0028 00380140 		.word	1073821696
 310              		.cfi_endproc
 311              	.LFE121:
 313              		.section	.text._sbrk,"ax",%progbits
 314              		.align	1
 315              		.global	_sbrk
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	_sbrk:
 321              	.LVL38:
 322              	.LFB122:
  93:Core/Source/main.c **** 
  94:Core/Source/main.c **** extern int  _end;
  95:Core/Source/main.c **** 
  96:Core/Source/main.c **** //---------------------------------------------------------------------------//
  97:Core/Source/main.c **** caddr_t _sbrk ( int incr )
  98:Core/Source/main.c **** {
 323              		.loc 1 98 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              		.loc 1 98 1 is_stmt 0 view .LVU71
 329 0000 0346     		mov	r3, r0
  99:Core/Source/main.c ****     static unsigned char *heap = NULL;
 330              		.loc 1 99 5 is_stmt 1 view .LVU72
 100:Core/Source/main.c ****     unsigned char *prev_heap;
 331              		.loc 1 100 5 view .LVU73
 101:Core/Source/main.c **** 
 102:Core/Source/main.c ****     if (heap == NULL) {
 332              		.loc 1 102 5 view .LVU74
 333              		.loc 1 102 14 is_stmt 0 view .LVU75
 334 0002 064A     		ldr	r2, .L25
 335 0004 1268     		ldr	r2, [r2]
 336              		.loc 1 102 8 view .LVU76
 337 0006 22B1     		cbz	r2, .L24
 338              	.L23:
ARM GAS  /tmp/ccWp3qOC.s 			page 17


 103:Core/Source/main.c ****         heap = (unsigned char *)&_end;
 104:Core/Source/main.c ****     }
 105:Core/Source/main.c ****     prev_heap = heap;
 339              		.loc 1 105 5 is_stmt 1 view .LVU77
 340              		.loc 1 105 15 is_stmt 0 view .LVU78
 341 0008 044A     		ldr	r2, .L25
 342 000a 1068     		ldr	r0, [r2]
 343              	.LVL39:
 106:Core/Source/main.c **** 
 107:Core/Source/main.c ****     heap += incr;
 344              		.loc 1 107 5 is_stmt 1 view .LVU79
 345              		.loc 1 107 10 is_stmt 0 view .LVU80
 346 000c 0344     		add	r3, r3, r0
 347              	.LVL40:
 348              		.loc 1 107 10 view .LVU81
 349 000e 1360     		str	r3, [r2]
 108:Core/Source/main.c **** 
 109:Core/Source/main.c ****     return (caddr_t) prev_heap;
 350              		.loc 1 109 5 is_stmt 1 view .LVU82
 110:Core/Source/main.c **** }
 351              		.loc 1 110 1 is_stmt 0 view .LVU83
 352 0010 7047     		bx	lr
 353              	.LVL41:
 354              	.L24:
 103:Core/Source/main.c ****     }
 355              		.loc 1 103 9 is_stmt 1 view .LVU84
 103:Core/Source/main.c ****     }
 356              		.loc 1 103 14 is_stmt 0 view .LVU85
 357 0012 024A     		ldr	r2, .L25
 358 0014 0249     		ldr	r1, .L25+4
 359 0016 1160     		str	r1, [r2]
 360 0018 F6E7     		b	.L23
 361              	.L26:
 362 001a 00BF     		.align	2
 363              	.L25:
 364 001c 00000000 		.word	.LANCHOR0
 365 0020 00000000 		.word	_end
 366              		.cfi_endproc
 367              	.LFE122:
 369              		.section	.text.link,"ax",%progbits
 370              		.align	1
 371              		.global	link
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	link:
 377              	.LVL42:
 378              	.LFB123:
 111:Core/Source/main.c **** 
 112:Core/Source/main.c **** //---------------------------------------------------------------------------//
 113:Core/Source/main.c **** int link(char *old, char *new) {
 379              		.loc 1 113 32 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 114:Core/Source/main.c ****     return -1;
ARM GAS  /tmp/ccWp3qOC.s 			page 18


 384              		.loc 1 114 5 view .LVU87
 115:Core/Source/main.c **** }
 385              		.loc 1 115 1 is_stmt 0 view .LVU88
 386 0000 4FF0FF30 		mov	r0, #-1
 387              	.LVL43:
 388              		.loc 1 115 1 view .LVU89
 389 0004 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE123:
 393              		.section	.text._close,"ax",%progbits
 394              		.align	1
 395              		.global	_close
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	_close:
 401              	.LVL44:
 402              	.LFB124:
 116:Core/Source/main.c **** 
 117:Core/Source/main.c **** //---------------------------------------------------------------------------//
 118:Core/Source/main.c **** int _close(int file)
 119:Core/Source/main.c **** {
 403              		.loc 1 119 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 120:Core/Source/main.c ****     return -1;
 408              		.loc 1 120 5 view .LVU91
 121:Core/Source/main.c **** }
 409              		.loc 1 121 1 is_stmt 0 view .LVU92
 410 0000 4FF0FF30 		mov	r0, #-1
 411              	.LVL45:
 412              		.loc 1 121 1 view .LVU93
 413 0004 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE124:
 417              		.section	.text._fstat,"ax",%progbits
 418              		.align	1
 419              		.global	_fstat
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	_fstat:
 425              	.LVL46:
 426              	.LFB125:
 122:Core/Source/main.c **** 
 123:Core/Source/main.c **** //---------------------------------------------------------------------------//
 124:Core/Source/main.c **** int _fstat(int file, struct stat *st)
 125:Core/Source/main.c **** {
 427              		.loc 1 125 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 126:Core/Source/main.c ****     //st->st_mode = S_IFCHR;
 127:Core/Source/main.c ****     return 0;
ARM GAS  /tmp/ccWp3qOC.s 			page 19


 432              		.loc 1 127 5 view .LVU95
 128:Core/Source/main.c **** }
 433              		.loc 1 128 1 is_stmt 0 view .LVU96
 434 0000 0020     		movs	r0, #0
 435              	.LVL47:
 436              		.loc 1 128 1 view .LVU97
 437 0002 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE125:
 441              		.section	.text._isatty,"ax",%progbits
 442              		.align	1
 443              		.global	_isatty
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	_isatty:
 449              	.LVL48:
 450              	.LFB126:
 129:Core/Source/main.c **** 
 130:Core/Source/main.c **** //---------------------------------------------------------------------------//
 131:Core/Source/main.c **** int _isatty(int file)
 132:Core/Source/main.c **** {
 451              		.loc 1 132 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 133:Core/Source/main.c ****     return 1;
 456              		.loc 1 133 5 view .LVU99
 134:Core/Source/main.c **** }
 457              		.loc 1 134 1 is_stmt 0 view .LVU100
 458 0000 0120     		movs	r0, #1
 459              	.LVL49:
 460              		.loc 1 134 1 view .LVU101
 461 0002 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE126:
 465              		.section	.text._lseek,"ax",%progbits
 466              		.align	1
 467              		.global	_lseek
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	_lseek:
 473              	.LVL50:
 474              	.LFB127:
 135:Core/Source/main.c **** 
 136:Core/Source/main.c **** //---------------------------------------------------------------------------//
 137:Core/Source/main.c **** int _lseek(int file, int ptr, int dir)
 138:Core/Source/main.c **** {
 475              		.loc 1 138 1 is_stmt 1 view -0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 139:Core/Source/main.c ****     return 0;
 480              		.loc 1 139 5 view .LVU103
ARM GAS  /tmp/ccWp3qOC.s 			page 20


 140:Core/Source/main.c **** }
 481              		.loc 1 140 1 is_stmt 0 view .LVU104
 482 0000 0020     		movs	r0, #0
 483              	.LVL51:
 484              		.loc 1 140 1 view .LVU105
 485 0002 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE127:
 489              		.section	.text.abort,"ax",%progbits
 490              		.align	1
 491              		.global	abort
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 496              	abort:
 497              	.LFB128:
 141:Core/Source/main.c **** 
 142:Core/Source/main.c **** //---------------------------------------------------------------------------//
 143:Core/Source/main.c **** void abort(void)
 144:Core/Source/main.c **** {
 498              		.loc 1 144 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ Volatile: function does not return.
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504              	.L33:
 145:Core/Source/main.c ****     /* Abort called */
 146:Core/Source/main.c ****     while(1);
 505              		.loc 1 146 5 discriminator 1 view .LVU107
 506              		.loc 1 146 13 discriminator 1 view .LVU108
 507              		.loc 1 146 10 discriminator 1 view .LVU109
 508 0000 FEE7     		b	.L33
 509              		.cfi_endproc
 510              	.LFE128:
 512              		.global	sw_led
 513              		.section	.bss.heap.0,"aw",%nobits
 514              		.align	2
 515              		.set	.LANCHOR0,. + 0
 518              	heap.0:
 519 0000 00000000 		.space	4
 520              		.section	.data.sw_led,"aw"
 523              	sw_led:
 524 0000 01       		.byte	1
 525              		.text
 526              	.Letext0:
 527              		.file 3 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/m
 528              		.file 4 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 529              		.file 5 "Drivers/CMSIS/GD/GD32F30x/Include/gd32f30x.h"
 530              		.file 6 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_usart.h"
 531              		.file 7 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/s
 532              		.file 8 "Core/Include/encoder.h"
 533              		.file 9 "Core/Include/spi.h"
 534              		.file 10 "Drivers/display/OLED_Fonts.h"
 535              		.file 11 "Core/Include/typedef.h"
 536              		.file 12 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_rcu.h"
 537              		.file 13 "Drivers/CMSIS/GD/GD32F30x/Include/system_gd32f30x.h"
ARM GAS  /tmp/ccWp3qOC.s 			page 21


 538              		.file 14 "Core/Include/systick.h"
 539              		.file 15 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_misc.h"
 540              		.file 16 "Core/Include/gpio.h"
 541              		.file 17 "Core/Include/usart.h"
 542              		.file 18 "Drivers/display/OLED.h"
 543              		.file 19 "Core/Include/tim.h"
 544              		.file 20 "/home/arashamf/soft/ARM_toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/
 545              		.file 21 "Drivers/GD32F30x_standard_peripheral/Include/gd32f30x_gpio.h"
ARM GAS  /tmp/ccWp3qOC.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccWp3qOC.s:18     .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccWp3qOC.s:22     .text.main:0000000000000000 $t
     /tmp/ccWp3qOC.s:28     .text.main:0000000000000000 main
     /tmp/ccWp3qOC.s:156    .text.main:0000000000000094 $d
     /tmp/ccWp3qOC.s:166    .text.jump_to_app:0000000000000000 $t
     /tmp/ccWp3qOC.s:172    .text.jump_to_app:0000000000000000 jump_to_app
     /tmp/ccWp3qOC.s:235    .text.jump_to_app:000000000000001c $d
     /tmp/ccWp3qOC.s:240    .text._read:0000000000000000 $t
     /tmp/ccWp3qOC.s:246    .text._read:0000000000000000 _read
     /tmp/ccWp3qOC.s:309    .text._read:0000000000000028 $d
     /tmp/ccWp3qOC.s:314    .text._sbrk:0000000000000000 $t
     /tmp/ccWp3qOC.s:320    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccWp3qOC.s:364    .text._sbrk:000000000000001c $d
     /tmp/ccWp3qOC.s:370    .text.link:0000000000000000 $t
     /tmp/ccWp3qOC.s:376    .text.link:0000000000000000 link
     /tmp/ccWp3qOC.s:394    .text._close:0000000000000000 $t
     /tmp/ccWp3qOC.s:400    .text._close:0000000000000000 _close
     /tmp/ccWp3qOC.s:418    .text._fstat:0000000000000000 $t
     /tmp/ccWp3qOC.s:424    .text._fstat:0000000000000000 _fstat
     /tmp/ccWp3qOC.s:442    .text._isatty:0000000000000000 $t
     /tmp/ccWp3qOC.s:448    .text._isatty:0000000000000000 _isatty
     /tmp/ccWp3qOC.s:466    .text._lseek:0000000000000000 $t
     /tmp/ccWp3qOC.s:472    .text._lseek:0000000000000000 _lseek
     /tmp/ccWp3qOC.s:490    .text.abort:0000000000000000 $t
     /tmp/ccWp3qOC.s:496    .text.abort:0000000000000000 abort
     /tmp/ccWp3qOC.s:523    .data.sw_led:0000000000000000 sw_led
     /tmp/ccWp3qOC.s:514    .bss.heap.0:0000000000000000 $d
     /tmp/ccWp3qOC.s:518    .bss.heap.0:0000000000000000 heap.0

UNDEFINED SYMBOLS
rcu_all_reset_flag_clear
SystemInit
SystemCoreClockUpdate
systick_config
nvic_priority_group_set
gpio_config
usart0_config
dma_config
spi0_config
OLED_init
timer_delay_init
rcu_ckout0_config
FontSet
snprintf
OLED_DrawStr
OLED_UpdScreen_DMA
gpio_bit_set
read_data_encoder
gpio_output_bit_get
gpio_bit_reset
Segoe_UI_Eng_12
lcd_buf
enc_count
usart_flag_get
usart_data_receive
ARM GAS  /tmp/ccWp3qOC.s 			page 23


_end
